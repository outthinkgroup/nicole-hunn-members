{"version":3,"sources":["global-sidebar/global-sidebar.js","index.js"],"names":["initGlobalSidebar","runOnDesktop","expandSidebar","addHandlerToToggler","isSideBarOpen","localStorage","getItem","document","body","dataset","sidebarState","toggleHandler","containerEl","toggle","attr","setItem","querySelectorAll","forEach","toggleBtn","addEventListener","state","dimensions","callback","checkIfDesktop","x","isMobile","matches","window","matchMedia","addListener","initOpenCloseSubMenus","menuItem","button","querySelector","handleToggleSubMenu"],"mappings":";AA+DC,SAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,IAAA,SAAA,IAAA,MAAA,IAAA,UAAA,wIAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,UAAA,SAAA,KAAA,GAAA,MAAA,GAAA,GAAA,MAAA,WAAA,GAAA,EAAA,cAAA,EAAA,EAAA,YAAA,MAAA,QAAA,GAAA,QAAA,EAAA,MAAA,KAAA,GAAA,cAAA,GAAA,2CAAA,KAAA,GAAA,EAAA,EAAA,QAAA,GAAA,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,OAAA,YAAA,OAAA,GAAA,OAAA,MAAA,KAAA,GAAA,SAAA,EAAA,GAAA,GAAA,MAAA,QAAA,GAAA,OAAA,EAAA,GAAA,SAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EA9DD,SAASA,IACPC,EAAa,QAASC,GACtBC,IAGF,SAASD,IACPE,cAAgBC,aAAaC,QAAQ,iBACf,UAAlBF,gBACJG,SAASC,KAAKC,QAAQC,aAAe,QAEvC,SAASP,IAQEQ,SAAAA,IACDC,IAGAR,OAAoC,IADzBS,EAAO,CAAED,YAFNL,SAASC,KAEUM,KAD1B,iBAE2C,OAAS,QACjET,aAAaU,QAAQ,gBAAiBX,GAXnCG,EAAAA,SAASS,iBAAiB,wCAEjBC,QAAQ,SAACC,GACrBA,OAAAA,EAAUC,iBAAiB,QAASR,KAYxC,SAASE,EAA8B,GAArBD,IAAAA,EAAAA,EAAAA,YAAaE,EAAAA,EAAAA,KACvBM,EAAQR,EAAYH,QAAQK,GAM3BM,OALHA,SACKR,EAAYH,QAAQK,GAE3BF,EAAYH,QAAQK,GAAQ,OAEvBM,EAGT,SAASnB,EAAaoB,EAAYC,GACvBC,SAAAA,EAAeC,GACjBC,EAASC,SACZJ,IAIAG,IAAAA,EAAWE,OAAOC,WAA0BP,eAAAA,OAAAA,EAAhD,MACAE,IACAE,EAASI,YAAYN,GAIvB,SAASO,IAEFvB,EAAAA,SAASS,iBAAiB,4BAENC,QAAQ,SAACc,GAC1BC,IAAAA,EAASD,EAASE,cAAc,iBACtBF,EAASE,cAAc,aACvCD,EAAOb,iBAAiB,QACfe,WACPrB,EAAO,CAAED,YAAamB,EAAUjB,KAAM,aA5D5Ca,OAAOR,iBAAiB,mBAAoBnB,GAkD5C2B,OAAOR,iBAAiB,mBAAoBW;;;;ACjD5C,aADA,QAAA,sCACA,QAAA","file":"index.js","sourceRoot":"../components","sourcesContent":["window.addEventListener(\"DOMContentLoaded\", initGlobalSidebar);\nfunction initGlobalSidebar() {\n  runOnDesktop(\"650px\", expandSidebar);\n  addHandlerToToggler();\n}\n\nfunction expandSidebar() {\n  isSideBarOpen = localStorage.getItem(\"isSideBarOpen\");\n  if (isSideBarOpen === \"false\") return;\n  document.body.dataset.sidebarState = \"open\";\n}\nfunction addHandlerToToggler() {\n  const toggleButtons = [\n    ...document.querySelectorAll('[data-part=\"toggle-sidebar\"] button'),\n  ];\n  toggleButtons.forEach((toggleBtn) =>\n    toggleBtn.addEventListener(\"click\", toggleHandler)\n  );\n\n  function toggleHandler() {\n    const containerEl = document.body;\n    const attr = \"sidebarState\";\n    const oldState = toggle({ containerEl, attr });\n    const isSideBarOpen = typeof oldState === \"undefined\" ? \"true\" : \"false\";\n    localStorage.setItem(\"isSideBarOpen\", isSideBarOpen);\n  }\n}\n\nfunction toggle({ containerEl, attr }) {\n  const state = containerEl.dataset[attr];\n  if (state) {\n    delete containerEl.dataset[attr];\n  } else {\n    containerEl.dataset[attr] = \"open\";\n  }\n  return state;\n}\n\nfunction runOnDesktop(dimensions, callback) {\n  function checkIfDesktop(x) {\n    if (!isMobile.matches) {\n      callback();\n    }\n  }\n\n  var isMobile = window.matchMedia(`(max-width: ${dimensions})`);\n  checkIfDesktop(isMobile); // Call listener function at run time\n  isMobile.addListener(checkIfDesktop); // Attach listener function on state changes\n}\n\nwindow.addEventListener(\"DOMContentLoaded\", initOpenCloseSubMenus);\nfunction initOpenCloseSubMenus() {\n  const allMenuItemsWithChildren = [\n    ...document.querySelectorAll(\".menu-item-has-children\"),\n  ];\n  allMenuItemsWithChildren.forEach((menuItem) => {\n    const button = menuItem.querySelector(\"[data-action]\");\n    const subMenu = menuItem.querySelector(\".sub-menu\");\n    button.addEventListener(\"click\", handleToggleSubMenu);\n    function handleToggleSubMenu() {\n      toggle({ containerEl: menuItem, attr: \"open\" });\n    }\n  });\n}\n","import \"./global-sidebar/global-sidebar.js\";\nimport \"./index.scss\";\n"]}